% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/merge_vcf.R
\name{merge_vcf}
\alias{merge_vcf}
\title{Merge VCF files}
\usage{
merge_vcf(vcf1, strata1, vcf2, strata2, monomorphic.out = TRUE,
  common.markers = TRUE, pop.levels = NULL, pop.labels = NULL,
  pop.select = NULL, blacklist.id = NULL, whitelist.markers = NULL,
  maf.thresholds = NULL, filename = NULL,
  parallel.core = parallel::detectCores() - 1)
}
\arguments{
\item{vcf1}{First VCF file.}

\item{strata1}{strata file for vcf1.}

\item{vcf2}{Second VCF file.}

\item{strata2}{strata file for vcf2.}

\item{monomorphic.out}{(optional) Should the monomorphic
markers present in the dataset be filtered out ?
Default: \code{monomorphic.out = TRUE}.}

\item{common.markers}{(optional) Logical. Default: \code{common.markers = TRUE},
will only keep markers in common (genotyped) between all the populations.}

\item{pop.levels}{(optional, string) This refers to the levels in a factor. In this
case, the id of the pop.
Use this argument to have the pop ordered your way instead of the default
alphabetical or numerical order. e.g. \code{pop.levels = c("QUE", "ONT", "ALB")}
instead of the default \code{pop.levels = c("ALB", "ONT", "QUE")}.
White spaces in population names are replaced by underscore.
Default: \code{pop.levels = NULL}.}

\item{pop.labels}{(optional, string) Use this argument to rename/relabel
your pop or combine your pop. e.g. To combine \code{"QUE"} and \code{"ONT"}
into a new pop called \code{"NEW"}:
(1) First, define the levels for your pop with \code{pop.levels} argument:
\code{pop.levels = c("QUE", "ONT", "ALB")}.
(2) then, use \code{pop.labels} argument:
\code{pop.labels = c("NEW", "NEW", "ALB")}.
To rename \code{"QUE"} to \code{"TAS"}:
\code{pop.labels = c("TAS", "ONT", "ALB")}.
Default: \code{pop.labels = NULL}. If you find this too complicated,
there is also the \code{strata} argument that can do the same thing,
see below.
White spaces in population names are replaced by underscore.}

\item{pop.select}{(string, optional) Selected list of populations for
the analysis. e.g. \code{pop.select = c("QUE", "ONT")} to select \code{QUE}
and \code{ONT} population samples (out of 20 pops).
Default: \code{pop.select = NULL}}

\item{blacklist.id}{(optional) A blacklist with individual ID and
a column header 'INDIVIDUALS'. The blacklist is an object in your
global environment or a file in the working directory
(e.g. "blacklist.txt"). \code{_} and \code{:} in individual's names
are changed to a dash \code{-}.
Default: \code{blacklist.id = NULL}.}

\item{whitelist.markers}{(optional) A whitelist containing CHROM (character
or integer) and/or LOCUS (integer) and/or
POS (integer) columns header. To filter by chromosome and/or locus and/or by snp.
The whitelist is an object in your
global environment or a file in the working directory (e.g. "whitelist.txt").
Note that \emph{de novo} CHROM column with 'un' need to be changed to 1.
In the VCF, the column ID is the LOCUS identification (VCF generated from
stacks have the SNP position on the read embedded in the ID,
so the ID = no longer represent the LOCUS). Marker names are cleaned of
separators that interfere with some packages or codes:
\code{/}, \code{:}, \code{-} and \code{.} are changed to an underscore
\code{_}.
Default \code{whitelist.markers = NULL} for no whitelist of markers.}

\item{maf.thresholds}{(optional) Use for minor allele frequency (maf) or count (mac)
filter. Default: \code{maf.thresholds = NULL}, for no filtering.

String with 5 values.
For example using SNP and frequency approach: \code{maf.thresholds = c("SNP", 0.001, "OR", 0.001, 1)}.
For example using locus and count approach: \code{maf.thresholds = c("locus", 3, "OR", 6, 1)}.
\enumerate{
\item maf approach (character: "SNP"/"locus"):
MAF filtering is conducted by SNPs or locus.
\code{"SNP"}: will consider all the SNPs on the same locus/read as independent
and will be filtered independently of their locus id.
\code{"locus"}: looks at the minimum MAF found on the
read/locus. Using this option will discard all the markers/snp on
that read based on the thresholds chosen. For the locus approach to work, your dataset
requires SNP and Locus info (e.g. from a VCF file).

\item local threshold (double or integer): For a frequency threshold use
a double (e.g. 0.05). For a count threshold, use an integer
(e.g. 3 for the number of alternate allele required in a population). This
threshold is applied by population.
Not sure about the threshold to use, choose the interactive mode argument.

\item operator (character: "OR" / "AND"):
To consider both the local \code{"AND"} the global thresholds, use \code{"AND"}.
To consider the local \code{"OR"} the global thresholds, use \code{"OR"}.

\item global threshold (double or integer): For a frequency threshold
use a double (e.g. 0.02). For a count threshold, use an integer
(e.g. 6 for the number of alternate allele required). This threshold is
applied at the dataset level (no population).
Not sure about the threshold to use, choose the interactive mode argument.

\item maf pop num threshold (integer)
The number of pop required to pass the thresholds
to keep the marker. Usually, I always use \code{1}, for 1 pop is required to
pass thresholds and keep the marker.
}}

\item{filename}{Name of the merged VCF file.
With the default, the function gives a filename based on date and time.
Default: \code{filename = NULL}.}

\item{parallel.core}{(optional) The number of core used for parallel
execution during import.
Default: \code{parallel::detectCores() - 1}.}
}
\value{
The function returns in the global environment a tidy dataset with
the merged VCF files and the merged VCF in the working directory.
}
\description{
This function allows to merge 2 VCF files.
}
\examples{
\dontrun{
# The simplest way to run the function:
sum <- radiator::merge_vcf(
vcf1 = "batch_1.vcf", strata1 = "strata1_brook_charr.tsv",
vcf1 = "batch_2.vcf", strata2 = "strata2_brook_charr.tsv",
pop.select = c("QC", "ON", "NE"),
maf.thresholds = c(0.002, 0.001),
maf.pop.num.threshold = 1,
maf.approach = "SNP",maf.operator = "OR",
filename = "my_new_VCF.vcf"
}
}
\author{
Thierry Gosselin \email{thierrygosselin@icloud.com}
}
