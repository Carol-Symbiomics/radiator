% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/radiator_deprecated_functions.R
\name{filter_population}
\alias{filter_population}
\title{Population filter}
\usage{
filter_population(
  interactive.filter = TRUE,
  data,
  pop.threshold = 100,
  percent = TRUE,
  filename = NULL,
  strata = NULL,
  parallel.core = parallel::detectCores() - 1,
  ...
)
}
\arguments{
\item{interactive.filter}{(optional, logical) Do you want the filtering session to
be interactive. With default: \code{interactive.filter == TRUE}, the user is
asked to see figures of distribution before making decisions for filtering.}

\item{data}{14 options for input: VCFs (SNPs or Haplotypes,
to make the vcf population ready),
plink (tped, bed), stacks haplotype file, genind (library(adegenet)),
genlight (library(adegenet)), gtypes (library(strataG)), genepop, DArT,
and a data frame in long/tidy or wide format. To verify that radiator detect
your file format use \code{\link{detect_genomic_format}} (see example below).
Documented in \strong{Input genomic datasets} of \code{\link{tidy_genomic_data}}.

\strong{DArT and VCF data}: \pkg{radiator} was not meant to generate alleles
and genotypes if you are using a VCF file with no genotype
(only genotype likelihood: GL or PL).
Neither is \pkg{radiator} able to magically generate a genind object
from a SilicoDArT dataset. Please look at the first few lines of your dataset
to understand it's limit before asking raditor to convert or filter your dataset.}

\item{pop.threshold}{The population threshold, proportion, percentage or
number e.g. 0.70, 70, 15.
Default: \code{pop.threshold = 100}.}

\item{percent}{Is the threshold a percentage? TRUE or FALSE.
This argument is necessary to distinguish percentage from integer population
threshold (e.g. 50 percent or 50 populations).
Default: \code{percent = TRUE}.}

\item{filename}{(optional) The function uses \code{\link[fst]{write.fst}},
to write the tidy data frame in
the folder created in the working directory. The file extension appended to
the \code{filename} provided is \code{.rad}.
Default: \code{filename = NULL}.}

\item{strata}{(optional)
The strata file is a tab delimited file with a minimum of 2 columns headers:
\code{INDIVIDUALS} and \code{STRATA}. Documented in \code{\link{read_strata}}.
DArT data: a third column \code{TARGET_ID} is required.
Documented on \code{\link{read_dart}}. Also use the strata read function to
blacklist individuals.
Default: \code{strata = NULL}.}

\item{parallel.core}{(optional) The number of core used for parallel
execution during import.
Default: \code{parallel.core = parallel::detectCores() - 1}.}

\item{...}{(optional) To pass further arguments for fine-tuning the function.}
}
\value{
With \code{interactive.filter = FALSE}, a list in the global environment,
with 7 objects:
\enumerate{
\item $tidy.filtered.ind
\item $whitelist.markers
\item $blacklist.markers
\item $strata
\item $filters.parameters
}

With \code{interactive.filter = TRUE}, a list with 2 additionnal objects is created.
\enumerate{
\item $plot.pop.threshold
\item $pop.threshold.helper.table
}

The object can be isolated in separate object outside the list by
following the example below.
}
\description{
Filter markers based on populations genotyped. Use a tidy data
set (long format) of any of these file format:
vcf, plink (tped/tfam), stacks haplotype file, genind,
genepop, data frame in wide format. The function uses
\code{\link[radiator]{tidy_genomic_data}} and
\code{\link[radiator]{tidy_wide}} to load the file. For filtering
The threshold can be a fixed number of population, a proportion or a percentage.
}
\details{
\strong{Interactive version}

There is 2 steps in the interactive version to visualize and filter
the data based on the population representation:

Step 1. Impact of population threshold on marker discovery

Step 2. Choose the filtering threshold
}
\examples{
\dontrun{
turtle.pop <- filter_population(
data = "turtle.vcf",
strata = "turtle.strata.tsv",
pop.thresholds = 100,
percent = TRUE,
filename = "tidy.data.turtle.tsv"
)

#If interactive.filter = TRUE, a list is created and to view the filtered tidy data:
tidy.data <- turtle.ind$tidy.filtered.ind

#Inside the same list, to isolate the blacklist.genotypes:
bg <- turtle.ind$blacklist.genotypes

# The remaining argument are used in tidy_genomic_data during import and allow
# the user to apply some filtering or selection before doing the filtering.
}
}
